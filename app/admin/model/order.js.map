{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\admin\\model\\order.js"
    ],
    "names": [
        "_",
        "require",
        "module",
        "exports",
        "think",
        "Model",
        "generateOrderNumber",
        "date",
        "Date",
        "getFullYear",
        "padStart",
        "getMonth",
        "getDay",
        "getHours",
        "getMinutes",
        "getSeconds",
        "random",
        "getOrderHandleOption",
        "orderId",
        "handleOption",
        "cancel",
        "delete",
        "pay",
        "comment",
        "delivery",
        "confirm",
        "return",
        "buy",
        "orderInfo",
        "where",
        "id",
        "find",
        "order_status",
        "getOrderStatusText",
        "statusText"
    ],
    "mappings": ";;AAAA,MAAMA,IAAIC,QAAQ,QAAR,CAAV;;AAEAC,OAAOC,OAAP,GAAiB,cAAcC,MAAMC,KAApB,CAA0B;AACzC;;;;AAIAC,wBAAsB;AACpB,UAAMC,OAAO,IAAIC,IAAJ,EAAb;AACA,WAAOD,KAAKE,WAAL,KAAqBT,EAAEU,QAAF,CAAWH,KAAKI,QAAL,EAAX,EAA4B,CAA5B,EAA+B,GAA/B,CAArB,GAA2DX,EAAEU,QAAF,CAAWH,KAAKK,MAAL,EAAX,EAA0B,CAA1B,EAA6B,GAA7B,CAA3D,GAA+FZ,EAAEU,QAAF,CAAWH,KAAKM,QAAL,EAAX,EAA4B,CAA5B,EAA+B,GAA/B,CAA/F,GAAqIb,EAAEU,QAAF,CAAWH,KAAKO,UAAL,EAAX,EAA8B,CAA9B,EAAiC,GAAjC,CAArI,GAA6Kd,EAAEU,QAAF,CAAWH,KAAKQ,UAAL,EAAX,EAA8B,CAA9B,EAAiC,GAAjC,CAA7K,GAAqNf,EAAEgB,MAAF,CAAS,MAAT,EAAiB,MAAjB,CAA5N;AACD;;AAED;;;;;AAKMC,sBAAN,CAA2BC,OAA3B,EAAoC;AAAA;;AAAA;AAClC,YAAMC,eAAe;AACnBC,gBAAQ,KADW,EACJ;AACfC,gBAAQ,KAFW,EAEJ;AACfC,aAAK,KAHc,EAGP;AACZC,iBAAS,KAJU,EAIH;AAChBC,kBAAU,KALS,EAKF;AACjBC,iBAAS,KANU,EAMH;AAChBC,gBAAQ,KAPW,EAOJ;AACfC,aAAK,KARc,CAQR;AARQ,OAArB;;AAWA,YAAMC,YAAY,MAAM,MAAKC,KAAL,CAAW,EAACC,IAAIZ,OAAL,EAAX,EAA0Ba,IAA1B,EAAxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAIH,UAAUI,YAAV,KAA2B,GAA/B,EAAoC;AAClCb,qBAAaE,MAAb,GAAsB,IAAtB;AACAF,qBAAaQ,GAAb,GAAmB,IAAnB;AACD;;AAED;AACA,UAAIC,UAAUI,YAAV,KAA2B,CAA/B,EAAkC;AAChCb,qBAAaC,MAAb,GAAsB,IAAtB;AACAD,qBAAaG,GAAb,GAAmB,IAAnB;AACD;;AAED;AACA,UAAIM,UAAUI,YAAV,KAA2B,GAA/B,EAAoC;AAClCb,qBAAaO,MAAb,GAAsB,IAAtB;AACD;;AAED;AACA,UAAIE,UAAUI,YAAV,KAA2B,GAA/B,EAAoC;AAClCb,qBAAaC,MAAb,GAAsB,IAAtB;AACAD,qBAAaG,GAAb,GAAmB,IAAnB;AACAH,qBAAaO,MAAb,GAAsB,IAAtB;AACD;;AAED;AACA,UAAIE,UAAUI,YAAV,KAA2B,GAA/B,EAAoC;AAClCb,qBAAaE,MAAb,GAAsB,IAAtB;AACAF,qBAAaI,OAAb,GAAuB,IAAvB;AACAJ,qBAAaQ,GAAb,GAAmB,IAAnB;AACD;;AAED,aAAOR,YAAP;AAnDkC;AAoDnC;;AAEKc,oBAAN,CAAyBf,OAAzB,EAAkC;AAAA;;AAAA;AAChC,YAAMU,YAAY,MAAM,OAAKC,KAAL,CAAW,EAACC,IAAIZ,OAAL,EAAX,EAA0Ba,IAA1B,EAAxB;AACA,UAAIG,aAAa,KAAjB;AACA,cAAQN,UAAUI,YAAlB;AACE,aAAK,CAAL;AACEE,uBAAa,KAAb;AACA;AAHJ;;AAMA,aAAOA,UAAP;AATgC;AAUjC;AA/EwC,CAA3C",
    "file": "..\\..\\..\\src\\admin\\model\\order.js",
    "sourcesContent": [
        "const _ = require('lodash');\r\n\r\nmodule.exports = class extends think.Model {\r\n  /**\r\n   * 生成订单的编号order_sn\r\n   * @returns {string}\r\n   */\r\n  generateOrderNumber() {\r\n    const date = new Date();\r\n    return date.getFullYear() + _.padStart(date.getMonth(), 2, '0') + _.padStart(date.getDay(), 2, '0') + _.padStart(date.getHours(), 2, '0') + _.padStart(date.getMinutes(), 2, '0') + _.padStart(date.getSeconds(), 2, '0') + _.random(100000, 999999);\r\n  }\r\n\r\n  /**\r\n   * 获取订单可操作的选项\r\n   * @param orderId\r\n   * @returns {Promise.<{cancel: boolean, delete: boolean, pay: boolean, comment: boolean, delivery: boolean, confirm: boolean, return: boolean}>}\r\n   */\r\n  async getOrderHandleOption(orderId) {\r\n    const handleOption = {\r\n      cancel: false, // 取消操作\r\n      delete: false, // 删除操作\r\n      pay: false, // 支付操作\r\n      comment: false, // 评论操作\r\n      delivery: false, // 确认收货操作\r\n      confirm: false, // 完成订单操作\r\n      return: false, // 退换货操作\r\n      buy: false // 再次购买\r\n    };\r\n\r\n    const orderInfo = await this.where({id: orderId}).find();\r\n\r\n    // 订单流程：下单成功－》支付订单－》发货－》收货－》评论\r\n    // 订单相关状态字段设计，采用单个字段表示全部的订单状态\r\n    // 1xx表示订单取消和删除等状态 0订单创建成功等待付款，101订单已取消，102订单已删除\r\n    // 2xx表示订单支付状态,201订单已付款，等待发货\r\n    // 3xx表示订单物流相关状态,300订单已发货，301用户确认收货\r\n    // 4xx表示订单退换货相关的状态,401没有发货，退款402,已收货，退款退货\r\n    // 如果订单已经取消或是已完成，则可删除和再次购买\r\n    if (orderInfo.order_status === 101) {\r\n      handleOption.delete = true;\r\n      handleOption.buy = true;\r\n    }\r\n\r\n    // 如果订单没有被取消，且没有支付，则可支付，可取消\r\n    if (orderInfo.order_status === 0) {\r\n      handleOption.cancel = true;\r\n      handleOption.pay = true;\r\n    }\r\n\r\n    // 如果订单已付款，没有发货，则可退款操作\r\n    if (orderInfo.order_status === 201) {\r\n      handleOption.return = true;\r\n    }\r\n\r\n    // 如果订单已经发货，没有收货，则可收货操作和退款、退货操作\r\n    if (orderInfo.order_status === 300) {\r\n      handleOption.cancel = true;\r\n      handleOption.pay = true;\r\n      handleOption.return = true;\r\n    }\r\n\r\n    // 如果订单已经支付，且已经收货，则可完成交易、评论和再次购买\r\n    if (orderInfo.order_status === 301) {\r\n      handleOption.delete = true;\r\n      handleOption.comment = true;\r\n      handleOption.buy = true;\r\n    }\r\n\r\n    return handleOption;\r\n  }\r\n\r\n  async getOrderStatusText(orderId) {\r\n    const orderInfo = await this.where({id: orderId}).find();\r\n    let statusText = '未付款';\r\n    switch (orderInfo.order_status) {\r\n      case 0:\r\n        statusText = '未付款';\r\n        break;\r\n    }\r\n\r\n    return statusText;\r\n  }\r\n};\r\n"
    ]
}